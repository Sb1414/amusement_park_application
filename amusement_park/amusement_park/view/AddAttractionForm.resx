<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgUPsQIDB/UCAwj1AgMI9gMECPoDBAf5AgMH+AID
        CPUCAgX6AgQKewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAABgDBxDIAgMH+gIECfMAAgVXBwUDgQsIBfVsSy7+rnhJ/5prQf88LiT/IBsc/0Mx
        Jf+ebkP/jWE7/0kzH/gIBgT3DQkGugAAADgCBQ3hEjSB/B1W0v8KHEL1AwYQmQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAIAAAAAAAAAAAAAADINCQbBCwgG9gYI
        DP4RMnv/GUmz/xEvcv8EBgz+CwcF4gUDA4QAAAAbAAAAAAAAAAAAAAAkAgYQvwMGDukDBg2SAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAbgodRPYiY/L/ImPy/yJj8v8DBg33AAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAASAYQJvQiYvD/ImPy/x5Y1/8CAwf4AAAACwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMGD8gGDyXxCRpA7wMGDfUCBAtzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAA7AAAATAAA
        AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD////wA/8AAPAAAAAD/wAA8AAAAAAPAADwAAAAAA8AAPAAAAAADwAA8AAAAAAPAADgAAAAAA8AAOAA
        AAAADwAAwAAAAAAPAADAAAAAAA8AAOAAAAAADwAA/+AAAAAPAAD/8AAAAA8AAP/wAAAADwAA//AAAAAP
        AAD8AAAAAA8AAPgAAAAADwAA+AAAAAAPAAD4AEgAAA8AAPgBiAAADwAA+AicAAAPAAD4HJwAAA8AAPgc
        GAAADwAA8AIAAAAPAADgQAMAAA8AAMB8DwAADwAAwHADgAAPAADgQAAAAA8AAOAEGAAADwAA+ByfAAAD
        AAD4PI4AAAMAAPwczgQAAwAA+AjIDwADAAD4AcAH//8AAPgAAAf//wAA+AAAB///AAD4AAAH//8AAP5g
        Awf//wAA//gP////AAD/+A////8AAP/4H////wAA//w/////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>